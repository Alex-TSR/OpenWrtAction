#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: test dfv

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'false'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'


jobs:
  job_build:
    runs-on: ubuntu-latest
    name: Build-OpenWrt-${{ matrix.platforms }}
    strategy:
      matrix:
        platforms: [X86, R5S, R4S, R2S, R2C, Pi4_Model_B]

    steps:
    - name: Generate Firmware
      id: compile
      run: |
        is_compile_error=0
        if [ "${{ matrix.platforms }}" = "X86" ]; then
          is_compile_error=1
        fi
        if [ "${{ matrix.platforms }}" = "R5S" ]; then
          is_compile_error=2
        fi
        if [ "${{ matrix.platforms }}" = "R4S" ]; then
          is_compile_error=3
        fi
        echo "compile result: $is_compile_error"
        echo "is_compile_error_${{ matrix.platforms }}=$is_compile_error" >> $GITHUB_OUTPUT

    - name: Upload Error Log To Artifact
      uses: actions/upload-artifact@v3
      with:
        name: compile_status
        path: ${{ env.LOGFILES }}/*
        retention-days: 5    

  job_organize_tags:
    needs: [job_build]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Organize-Release-Tags

    steps:
    - name: Get Values
      id: organize_tags
      run: |
        x86_compile_error="${{ needs.job_build.outputs.compile.is_compile_error_X86 }}"
        echo $x86_compile_error
        r5s_compile_error="${{ needs.job_build.outputs.compile.is_compile_error_R5S }}"
        echo $r5s_compile_error
        r4s_compile_error="${{ needs.job_build.outputs.compile.is_compile_error_R4S }}"
        echo $r4s_compile_error




        