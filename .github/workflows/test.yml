#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: TEST

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'true'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds_config/custom.feeds.conf.default
  DIY_P1_SH: diy_script/diy-part1.sh
  DIY_P2_SH: diy_script/diy-part2.sh
  COMMIT_LOG_NUM: 1
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_ARTIFACT: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  


jobs:
  job_1:
    runs-on: ubuntu-latest

    steps:
    - name: Organize Tags
      id: organize_tags
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        
          ARTIFACTS=$(gh api repos/${{ github.repository }}/actions/runs/5879528860/artifacts)
          NAMES=$(echo "$ARTIFACTS" | jq -r '.artifacts[].name')
          NAMES_ARRAY=($(echo "$NAMES" | tr '\n' ' '))
          platforms=(X86 R5S R4S R2S R2C Pi4_Model_B)
          for ((i = 0; i < ${#platforms[@]}; i++)); do
            platform="${platforms[i]}"
            echo $platform
            found=false
            row=$((i+17))s
            for ((j = 0; j < ${#NAMES_ARRAY[@]}; j++)); do
              name="${NAMES_ARRAY[j]}"
              echo $name
              if [[ "$name" == "log_error_$platform"* ]]; then
                found=true
                break
              fi
            done
            
            if $found; then
              echo $found
            else
              echo $found
            fi
          done




        