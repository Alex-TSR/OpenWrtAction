#
# Copyright (c) 2022-2024 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: test(V4)

on:
  repository_dispatch:
    types: [openwrt_source_update]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'false'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  MAKE_DEFCONFIG_SH: compile_script/step01_make_defconfig.sh
  GENERATE_RELEASE_TAG_SH: compile_script/step02_generate_release_tag.sh
  GENERATE_GIT_LOG_SH: compile_script/step03_generate_git_log.sh
  UPDATE_GIT_LOG_SH:  compile_script/step06_update_git_log.sh
  ORGANIZE_TAG_SH: compile_script/step07_organize_tag.sh
  PLATFORMS_SH: compile_script/platforms.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_ARTIFACT: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  job_init: 
    runs-on: ubuntu-24.04
    name: Init
    outputs:
      output_release_tag: ${{ steps.gen_release_tag.outputs.release_tag }}
      platforms: ${{ steps.read-platforms.outputs.matrix }}
      platforms_source: ${{ steps.read-platforms.outputs.source_matrix_json }}
    steps:
      - name: Generate Tag Name
        id: gen_release_tag
        run: |
          echo "release_tag=multi-platform_$(date +"%Y.%m.%d_%H.%M.%S")" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read Platforms From File
        id: read-platforms
        run: |
          bash $PLATFORMS_SH

  job_build_toolchain:
    needs: [job_init]
    runs-on: ${{ matrix.value.OS }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.job_init.outputs.platforms) }}
    name: Toolchain-${{ matrix.source_code_platform }}-${{ matrix.platform }}

    steps:
      - name: Server Info
        run: |
            echo "---------------------CPU Info--------------------"
            lscpu
            echo "---------------------RAM Info--------------------"
            free -h

      - name: Initialization Environment
        run: |
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown -R $USER:$GROUPS /workdir
 
      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 6144
          swap-size-mb: 10240
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          build-mount-path: '/workdir'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull the latest changes
        run: git pull origin ${{ github.ref_name }}

      - name: Initialization Directory
        working-directory: /workdir
        id: init_directory
        run: |
          sudo mkdir -p openwrt
          sudo mkdir -p download
          sudo chown -R $USER:$GROUPS /workdir/openwrt
          sudo chown -R $USER:$GROUPS /workdir/download

          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          ln -sf /workdir/download $GITHUB_WORKSPACE/download

      - name: Compile Toolchain
        id: compile_toolchain
        run: |
          cd openwrt
          cd ..
          chmod +x ${{ matrix.value.DIY_P3_SH }}
          cd openwrt
          $GITHUB_WORKSPACE/${{ matrix.value.DIY_P3_SH }}
  